import React, { useEffect } from "react";
import { useSelector } from "react-redux";

import { fetchPizzas, selectPizza } from "../redux/slices/pizzaSlice";

import Categories from "../components/Categories";
import Sort from "../components/Sort";
import Pizza from "../components/Pizza/Pizza";
import Pagination from "../components/Pagination";
import Skeleton from "../components/Pizza/Skeleton";

import { selectCategoriesId } from "../redux/slices/categoriesSlice";
import { selectSort } from "../redux/slices/filtersSplice";
import { selectPaginationPage } from "../redux/slices/paginationSplice";
import { selectPizzaSearch } from "../redux/slices/pizzaSlice";
import { useAppDispatch } from "../redux/store";
import Header from "../components/Header";

const Home: React.FC = () => {
  const dispatch = useAppDispatch();

  const categoriesId = useSelector(selectCategoriesId);
  const sortId = useSelector(selectSort);
  const currentPage = useSelector(selectPaginationPage);
  const { items, status } = useSelector(selectPizza);
  const search = useSelector(selectPizzaSearch);

  // eslint-disable-next-line array-callback-return
  items.map((el) => {
    console.log(el)
  })

  const getPizzas = () => {
    dispatch(
      fetchPizzas({
        categoriesId,
        sortId,
        currentPage,
      })
    );
  };

  useEffect(() => {
    getPizzas();
  }, [categoriesId, sortId, currentPage]);

  const pizza = items
    .filter((obj) => {
      if (obj.title.toLowerCase().includes(search.toLowerCase())) {
        return true;
      }
      return false;
    })
    .map((item) => <Pizza key={item.id} {...item} />);

  const sceletons = [...new Array(6)].map((_, index) => (
    <Skeleton key={index} />
  ));

  return (
    <>
      <Header />
      <div className="content">
        <div className="container">
          <div className="content__top">
            <Categories />
            <Sort />
          </div>
          <h2 className="content__title">–í—Å—ñ –ø—ñ—Ü–∏</h2>
          <div className="content__items">
            {status === "error" ? (
              <div className="content__error-info">
                <h1>
                  –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ <span>üòï</span>
                </h1>
                <p>–ë—É–¥—å –ª–∞—Å–∫–∞ —Å–ø—Ä–æ–±—É–π—Ç–µ, —á–µ—Ä–µ–∑ –¥–µ—è–∫–∏–π —á–∞—Å</p>
              </div>
            ) : status === "loading" ? (
              sceletons
            ) : (
              pizza
            )}
            {/* <Pizza title="–ß–∏–∑–±—É—Ä–≥–µ—Ä-–ø—ñ—Ü–∞" price="195"/>
            <Pizza title="–°–∏—Ü–∏–ª—ñ–π—Å—å–∫–∞" price="220"/>
            <Pizza title="–ü–µ–ø–µ—Ä–æ–Ω—ñ" price="250"/>
            <Pizza title="–ß–æ—Ç–∏—Ä–∏ —Å–∏—Ä–∏" price="200"/>
            <Pizza title="–ë–∞–≤–∞—Ä—Å—å–∫–∞" price="160"/>
            <Pizza title="–ì–æ—Å—Ç—Ä–∞ –ú–µ–∫—Å–∏–∫–∞–Ω–æ" price="230"/>
            <Pizza title="–ì—Ä–∏–±–Ω–∞" price="160"/>
            <Pizza title="–ú‚Äô—è—Å–Ω–∞" price="240"/>
            <Pizza title="–ß–æ—Ç–∏—Ä–∏ –ø–æ—Ä–∏ —Ä–æ–∫—É" price="250"/>
            <Pizza title="–ì–∞–≤–∞–π—Å—å–∫–∞" price="170"/>
            <Pizza title="–ú–∞—Ä–≥–∞—Ä–∏—Ç–∞" price="210"/> */}
          </div>
        </div>
        <Pagination />
      </div>
    </>
  );
};

export default Home;
